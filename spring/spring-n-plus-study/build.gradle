plugins {
    id 'java-library'
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id "io.spring.dependency-management" version "1.0.10.RELEASE"
}

group 'org.example'
version '1.0-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_12

apply plugin: 'java-library'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


ext {
    springCloudVersion = "Hoxton.SR11"
    springBootVersion = "2.3.4.RELEASE"
    mockitoVersion = "3.11.1"
    lombokVersion = "1.18.12"
}

repositories {
    mavenCentral()
}

dependencies {

    // lombok 라이브러리 추가
    implementation "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testImplementation "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

dependencyManagement {
    imports {
        // 특정 버전의 Maven 아티팩트에 대한 종속성을 정의 할 수 있다.
        //https://docs.spring.io/dependency-management-plugin/docs/current-SNAPSHOT/reference/html/#dependency-management-configuration-bom-import
        // 하위 모듈 내에서 이러한 종속성 중 하나가 필요한 경우 버전 번호가 dependencyManagement 클로저에서 로드되므로 버전 번호를 제공하지 않고 하위 모듈에서 지정할 수 있습니다.
        // 이를 통해 Maven의 pom.xml 파일에있는 <dependencyManagement> 요소와 매우 유사하게 여러 모듈에 배포하는 대신 단일 위치에서 버전 번호를 지정할 수 있습니다.
        mavenBom"org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom"org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
    }
}


test {
    useJUnitPlatform()
}
